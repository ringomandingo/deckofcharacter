{"version":3,"sources":["audio/open2.mp3","audio/closed5.mp3","audio/popup3.mp3","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","shuffle","charFlip","$","click","addClass","audio","play","volume","data","removeClass","characterCard","values","CharacterData","randChar","parseInt","Math","random","length","toolCard","ToolData","randTool","placesCard","PlacesData","randPlaces","floor","console","log","react_default","a","createElement","className","id","preload","src","toneopen","toneclose","tonepopup","onClick","e","preventDefault","window","location","reload","bind","image","alt","title","data-link","content","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gvJCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wUCkNzBC,cAvMb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,QAAS,GACTC,SAAU,IAJKT,mFAQjBU,IAAE,SAASC,MAAM,WACfD,IAAEP,MAAMS,SAAS,YAEnBF,IAAE,wBAAwBC,MAAM,WAC9B,IAAIE,EAAQH,IAAE,iBAAiB,GAC/BG,EAAMC,OACND,EAAME,OAAS,KAEjBL,IAAE,oBAAoBC,MAAM,WAC1B,IAAIE,EAAQH,IAAE,iBAAiB,GAC/BG,EAAMC,OACND,EAAME,OAAS,KAEjBL,IAAE,qBAAqBC,MAAM,WAC3B,IAAIE,EAAQH,IAAE,iBAAiB,GAC/BG,EAAMC,OACND,EAAME,OAAS,KAEjBL,IAAE,iBAAiBC,MAAM,WACvBD,IAAE,2BAA6BA,IAAEP,MAAMa,KAAK,QAAU,KAAKJ,SAAS,UACpE,IAAIC,EAAQH,IAAE,eAAe,GAC7BG,EAAMC,OACND,EAAME,OAAS,KAEjBL,IAAE,eAAeC,MAAM,WACrBD,IAAE,iBAAiBO,YAAY,UAC/B,IAAIJ,EAAQH,IAAE,eAAe,GAC7BG,EAAMC,OACND,EAAME,OAAS,sCAKjB,IAAMG,EAAgBjB,OAAOkB,OAAOC,GAC9BC,EAAWH,EAAcI,SAASC,KAAKC,SAAWN,EAAcO,SAEhEC,EAAWzB,OAAOkB,OAAOQ,GACzBC,EAAWF,EAASJ,SAASC,KAAKC,SAAWE,EAASD,SAEtDI,EAAa5B,OAAOkB,OAAOW,GAC3BC,EAAaF,EAAWP,SAASC,KAAKC,SAAWK,EAAWJ,SAE9DD,EAASD,KAAKS,MAAuB,IAAhBT,KAAKC,SAAkB,GAChDS,QAAQC,IAAI,8BAAgCV,GAa5C,OAHAS,QAAQC,IADG,kBAMTC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAOE,GAAG,eAAeC,QAAQ,QAC/BL,EAAAC,EAAAC,cAAA,UAAQI,IAAKC,OAEfP,EAAAC,EAAAC,cAAA,SAAOE,GAAG,eAAeC,QAAQ,QAC/BL,EAAAC,EAAAC,cAAA,UAAQI,IAAKC,OAEfP,EAAAC,EAAAC,cAAA,SAAOE,GAAG,eAAeC,QAAQ,QAC/BL,EAAAC,EAAAC,cAAA,UAAQI,IAAKC,OAEfP,EAAAC,EAAAC,cAAA,SAAOE,GAAG,aAAaC,QAAQ,QAC7BL,EAAAC,EAAAC,cAAA,UAAQI,IAAKE,OAEfR,EAAAC,EAAAC,cAAA,SAAOE,GAAG,aAAaC,QAAQ,QAC7BL,EAAAC,EAAAC,cAAA,UAAQI,IAAKG,OAGfT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBO,QA7BpC,SAAiBC,GACfA,EAAEC,iBACFd,QAAQC,IAAI,uBACZc,OAAOC,SAASC,UA0BmCC,KAAKhD,OACpDgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,iBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,mBAIJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,wBAEEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BAKJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,sBAAwBjB,EAASkB,IAC/CJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKI,IAAKpB,EAAS+B,MAAOC,IAAKhC,EAASiC,SAE1CnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAajB,EAASiC,OACpCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,kBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeiB,YAAU,aAE1CpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,GAAG,UAC3BJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,gBAKNH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kBAAoBV,EAASW,IAC3CJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKI,IAAKb,EAASwB,MAAOC,IAAKzB,EAAS0B,SAE1CnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaV,EAAS0B,OACpCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,kBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeiB,YAAU,aAE1CpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,GAAG,UAC3BJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,WAKNH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,oBAAsBP,EAAWQ,IAC/CJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKI,IAAKV,EAAWqB,MAAOC,IAAKtB,EAAWuB,SAE9CnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaP,EAAWuB,OACtCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,kBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeiB,YAAU,cAE1CpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,GAAG,UAC3BJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,aAORH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeiB,YAAU,WACtCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,SACAH,EAAAC,EAAAC,cAAA,UAAKhB,EAASiC,OACdnB,EAAAC,EAAAC,cAAA,SAAIhB,EAASmC,WAIjBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeiB,YAAU,WACtCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,SACAH,EAAAC,EAAAC,cAAA,UAAKT,EAAS0B,OACdnB,EAAAC,EAAAC,cAAA,SAAIT,EAAS4B,WAIjBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeiB,YAAU,YACtCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,SACAH,EAAAC,EAAAC,cAAA,UAAKN,EAAWuB,OAChBnB,EAAAC,EAAAC,cAAA,SAAIN,EAAWyB,qBA3LbC,aCEEC,QACW,cAA7BV,OAAOC,SAASU,UAEe,UAA7BX,OAAOC,SAASU,UAEhBX,OAAOC,SAASU,SAASC,MACvB,2DCZNC,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a2cf2942.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/open2.df859a8f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/closed5.490a5ba1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/popup3.009f6d9d.mp3\";","import React, { Component } from 'react';\nimport './App.css';\nimport CharacterData from './data/characters.json'\nimport ToolData from './data/tools.json'\nimport PlacesData from './data/places.json'\nimport $ from 'jquery'\nimport toneopen from './audio/open2.mp3'\nimport toneclose from './audio/closed5.mp3'\nimport tonepopup from './audio/popup3.mp3'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shuffle: [],\n      charFlip: []\n    };\n  }\n  componentDidMount() {\n    $(\".card\").click(function(){\n      $(this).addClass(\"active\");\n    });\n    $(\".character .cardback\").click(function(){\n      var audio = $(\"#mysoundclip1\")[0];\n      audio.play();\n      audio.volume = 0.5;\n    });\n    $(\".tools .cardback\").click(function(){\n      var audio = $(\"#mysoundclip2\")[0];\n      audio.play();\n      audio.volume = 0.5;\n    });\n    $(\".places .cardback\").click(function(){\n      var audio = $(\"#mysoundclip3\")[0];\n      audio.play();\n      audio.volume = 0.5;\n    });\n    $(\".cardinfolink\").click(function(){\n      $('.cardinfocont[data-link=' + $(this).data('link') + ']').addClass('active');\n      var audio = $(\"#popupsound\")[0];\n      audio.play();\n      audio.volume = 0.5;\n    });\n    $(\".closepopup\").click(function(){\n      $(\".cardinfocont\").removeClass(\"active\");\n      var audio = $(\"#closeaudio\")[0];\n      audio.play();\n      audio.volume = 0.5;\n    });\n  }\n\n  render() {\n    const characterCard = Object.values(CharacterData)\n    const randChar = characterCard[parseInt(Math.random() * characterCard.length)]\n\n    const toolCard = Object.values(ToolData)\n    const randTool = toolCard[parseInt(Math.random() * toolCard.length)]\n\n    const placesCard = Object.values(PlacesData)\n    const randPlaces = placesCard[parseInt(Math.random() * placesCard.length)]\n\n    var random = Math.floor((Math.random() * 100) + 1);\n    console.log(\"secret number from app.js  \" + random);\n\n    /* Shuffle Button */\n    function shuffle(e) {\r\n      e.preventDefault();\r\n      console.log(\"Page was refreshed!\");\r\n      window.location.reload();\r\n    }\n\n    var poop = \"my browniessss\";\n    console.log(poop)\n\n\n    return (\n\n      <div className=\"App\">\n        <audio id=\"mysoundclip1\" preload=\"auto\">\n          <source src={toneopen}/>\n        </audio>\n        <audio id=\"mysoundclip2\" preload=\"auto\">\n          <source src={toneopen}/>\n        </audio>\n        <audio id=\"mysoundclip3\" preload=\"auto\">\n          <source src={toneopen}/>\n        </audio>\n        <audio id=\"closeaudio\" preload=\"auto\">\n          <source src={toneclose}/>\n        </audio>\n        <audio id=\"popupsound\" preload=\"auto\">\n          <source src={tonepopup}/>\n        </audio>\n\n        <div className=\"shufflebtncont\" onClick={shuffle.bind(this)}>\n          <div className=\"button\">\n            <div className=\"buttontext1\">Shuffle cards</div>\n            <div className=\"buttontext2\">Shuffle cards</div>\n          </div>\n        </div>\n\n        <div className=\"cardwrap\">\n          <div className=\"loadingcont\">\n            <div className=\"loadingtext\">\n              The Deck of Character\n              <div>\n              <i>preparing cards</i>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"cardrow\">\n\n            <div className={\"card character char\" + randChar.id}>\n              <div className=\"cardint\">\n                <div className=\"cardfront\">\n                  <div className=\"flipcolor\"></div>\n                  <div className=\"cardimg\">\n                    <img src={randChar.image} alt={randChar.title}/>\n                  </div>\n                  <h1 className=\"cardtitle\">{randChar.title}</h1>\n                  <div className=\"moreinfo\">\n                    Card Info Â»\n                  </div>\n                  <div className=\"cardinfolink\" data-link=\"charpop\"></div>\n                </div>\n                <div className=\"cardback\" id=\"poopie\">\n                  <h2 className=\"cardtype\">Character</h2>\n                </div>\n              </div>\n            </div>\n\n            <div className={\"card tools tool\" + randTool.id}>\n              <div className=\"cardint\">\n                <div className=\"cardfront\">\n                  <div className=\"flipcolor\"></div>\n                  <div className=\"cardimg\">\n                    <img src={randTool.image} alt={randTool.title}/>\n                  </div>\n                  <h1 className=\"cardtitle\">{randTool.title}</h1>\n                  <div className=\"moreinfo\">\n                    Card Info Â»\n                  </div>\n                  <div className=\"cardinfolink\" data-link=\"toolpop\"></div>\n                </div>\n                <div className=\"cardback\" id=\"poopie\">\n                  <h2 className=\"cardtype\">Tool</h2>\n                </div>\n              </div>\n            </div>\n\n            <div className={\"card places place\" + randPlaces.id}>\n              <div className=\"cardint\">\n                <div className=\"cardfront\">\n                  <div className=\"flipcolor\"></div>\n                  <div className=\"cardimg\">\n                    <img src={randPlaces.image} alt={randPlaces.title}/>\n                  </div>\n                  <h1 className=\"cardtitle\">{randPlaces.title}</h1>\n                  <div className=\"moreinfo\">\n                    Card Info Â»\n                  </div>\n                  <div className=\"cardinfolink\" data-link=\"placepop\"></div>\n                </div>\n                <div className=\"cardback\" id=\"poopie\">\n                  <h2 className=\"cardtype\">Place</h2>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n          <div className=\"info popups\">\n\n            <div className=\"cardinfocont\" data-link=\"charpop\">\n              <div className=\"closepopup bigclose\"></div>\n              <div className=\"cardinfoint\">\n                <div className=\"closepopup\">Close</div>\n                <h1>{randChar.title}</h1>\n                <p>{randChar.content}</p>\n              </div>\n            </div>\n\n            <div className=\"cardinfocont\" data-link=\"toolpop\">\n              <div className=\"closepopup bigclose\"></div>\n              <div className=\"cardinfoint\">\n                <div className=\"closepopup\">Close</div>\n                <h1>{randTool.title}</h1>\n                <p>{randTool.content}</p>\n              </div>\n            </div>\n\n            <div className=\"cardinfocont\" data-link=\"placepop\">\n              <div className=\"closepopup bigclose\"></div>\n              <div className=\"cardinfoint\">\n                <div className=\"closepopup\">Close</div>\n                <h1>{randPlaces.title}</h1>\n                <p>{randPlaces.content}</p>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}